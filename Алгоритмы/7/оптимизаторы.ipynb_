{"nbformat":4,"nbformat_minor":0,"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.5.5"},"colab":{"name":"Копия блокнота \"scipy=optimization.ipynb\"","provenance":[{"file_id":"1BIOqY1gCrhDww41CWYSczX5YUsTXXLAw","timestamp":1608947278274}]}},"cells":[{"cell_type":"markdown","metadata":{"id":"MmlS_kNNurU6"},"source":["# Решение оптимизационных задач в SciPy (Версия для Python 3)"]},{"cell_type":"code","metadata":{"id":"1VBBNMBnurU_"},"source":["from scipy import optimize"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"gtP5JXa3urU_","outputId":"2b42fca7-26fc-4711-f3e9-ff4e09fe1a71"},"source":["def f(x):   # The rosenbrock function\n","    return .5*(1 - x[0])**2 + (x[1] - x[0]**2)**2\n","    \n","print(f([1, 1]))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["0.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"o_YLcDzTurVA","outputId":"f5a9e7e6-e24d-435c-fbd8-0adb66a2d27a"},"source":["result = optimize.brute(f, ((-5, 5), (-5, 5)))\n","print(result)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[0.99999324 1.00001283]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"wjdLjOK6urVB","outputId":"b9f17f27-8078-40d7-a2a2-1a0ec2a9cefb"},"source":["print(optimize.differential_evolution(f, ((-5, 5), (-5, 5))))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["     fun: 7.395570986446986e-32\n"," message: 'Optimization terminated successfully.'\n","    nfev: 3393\n","     nit: 112\n"," success: True\n","       x: array([1., 1.])\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"kEKztnP8urVB"},"source":["import numpy as np\n","\n","def g(x):\n","        return np.array((-2*.5*(1 - x[0]) - 4*x[0]*(x[1] - x[0]**2), 2*(x[1] - x[0]**2)))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"hN_bI9TburVB","outputId":"a270ebe6-02cb-4580-e93d-86f5edf9228f"},"source":["print(optimize.check_grad(f, g, [2, 2]))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["2.384185791015625e-07\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"zEOMraqnurVC","outputId":"c7ad50f8-df93-4849-bbe0-ab60da94c953"},"source":["print(optimize.fmin_bfgs(f, [2, 2], fprime=g))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Optimization terminated successfully.\n","         Current function value: 0.000000\n","         Iterations: 8\n","         Function evaluations: 9\n","         Gradient evaluations: 9\n","[1.00000582 1.00001285]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"SMFBPBprurVC","outputId":"f0505eba-fcf8-429a-f7f1-36d7a5bf89a8"},"source":["print(optimize.minimize(f, [2, 2]))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["      fun: 1.7838045907468558e-11\n"," hess_inv: array([[0.95489061, 1.90006632],\n","       [1.90006632, 4.27872378]])\n","      jac: array([9.88093227e-07, 2.41749084e-06])\n","  message: 'Optimization terminated successfully.'\n","     nfev: 36\n","      nit: 8\n","     njev: 9\n","   status: 0\n","  success: True\n","        x: array([1.00000573, 1.00001265])\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"wKC8HOTyurVC","outputId":"cbce37c3-e2c8-499e-a48e-729728ea351e"},"source":["print(optimize.minimize(f, [2, 2], method='BFGS'))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["      fun: 1.7838045907468558e-11\n"," hess_inv: array([[0.95489061, 1.90006632],\n","       [1.90006632, 4.27872378]])\n","      jac: array([9.88093227e-07, 2.41749084e-06])\n","  message: 'Optimization terminated successfully.'\n","     nfev: 36\n","      nit: 8\n","     njev: 9\n","   status: 0\n","  success: True\n","        x: array([1.00000573, 1.00001265])\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"zTblwL5zurVC","outputId":"85dcda09-6f3a-4583-d925-173b6e9f20cc"},"source":["print(optimize.minimize(f, [2, 2], method='Nelder-Mead'))"],"execution_count":null,"outputs":[{"output_type":"stream","text":[" final_simplex: (array([[0.99998568, 0.99996682],\n","       [1.00002149, 1.00004744],\n","       [1.0000088 , 1.00003552]]), array([1.23119954e-10, 2.50768082e-10, 3.59639951e-10]))\n","           fun: 1.2311995365407462e-10\n","       message: 'Optimization terminated successfully.'\n","          nfev: 91\n","           nit: 46\n","        status: 0\n","       success: True\n","             x: array([0.99998568, 0.99996682])\n"],"name":"stdout"}]}]}